<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="54:/home/john/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b5d64b55728"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b5d64c10b08"/></to>
    </wire>
    <wire loc="53:/home/john/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b5d64b54be8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b5d64c11c00"/></to>
    </wire>
    <wire loc="55:/home/john/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b5d64c0d020"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b5d64b5edd8"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="TCPManagerC" loc="5:/home/john/workspace/Project3/src/lib/Modules/TCPManagerC.nc">
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/john/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/john/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/john/local/tinyos-2.1.1/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/home/john/local/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/home/john/local/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="NetLayer" ref="0x2b5d64ccb220" loc="8:/home/john/workspace/Project3/src/lib/Modules/TCPManagerC.nc">
      <component-ref qname="TCPManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NetLayer" scoped="" ref="0x2b5d64ccb220"/></type-interface>
      <instance>
        <interfacedef-ref qname="NodeI"/>
        <arguments>
          <type-tag size="I:20" alignment="I:1"><nx_struct-ref name="transport" ref="0x2b5d64c55b50"/>
            <typename><typedef-ref name="transport" ref="0x2b5d64c532d8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x2b5d64ccbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TCPManager" ref="0x2b5d64ca89e0" loc="6:/home/john/workspace/Project3/src/lib/Modules/TCPManagerC.nc">
      <component-ref qname="TCPManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TCPManager" scoped="" ref="0x2b5d64ca89e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TCPManager"/>
        <arguments>
          <type-tag size="I:860" alignment="I:1"><struct-ref name="TCPSocketAL" ref="0x2b5d64c957b0"/>
            <typename><typedef-ref name="TCPSocketAL" ref="0x2b5d64c93b00"/></typename>
          </type-tag>
          <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x2b5d64c4d640"/>
            <typename><typedef-ref name="pack" ref="0x2b5d64c4ca40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b5d64cac730"/>
        <function-ref name="socket" scoped="" ref="0x2b5d64cacb80"/>
        <function-ref name="freeSocket" scoped="" ref="0x2b5d64cab088"/>
        <function-ref name="handlePacket" scoped="" ref="0x2b5d64cab520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TCPSocket" ref="0x2b5d64cb6020" loc="7:/home/john/workspace/Project3/src/lib/Modules/TCPManagerC.nc">
      <component-ref qname="TCPManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TCPSocket" scoped="" ref="0x2b5d64cb6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TCPSocket"/>
        <arguments>
          <type-tag size="I:860" alignment="I:1"><struct-ref name="TCPSocketAL" ref="0x2b5d64c957b0"/>
            <typename><typedef-ref name="TCPSocketAL" ref="0x2b5d64c93b00"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="listen" scoped="" ref="0x2b5d64cb5868"/>
        <function-ref name="isClosing" scoped="" ref="0x2b5d64ccd088"/>
        <function-ref name="isConnectPending" scoped="" ref="0x2b5d64cc0a28"/>
        <function-ref name="release" scoped="" ref="0x2b5d64cc2328"/>
        <function-ref name="read" scoped="" ref="0x2b5d64cc2838"/>
        <function-ref name="init" scoped="" ref="0x2b5d64cb6ba0"/>
        <function-ref name="bind" scoped="" ref="0x2b5d64cb50f8"/>
        <function-ref name="isClosed" scoped="" ref="0x2b5d64cbfa40"/>
        <function-ref name="isListening" scoped="" ref="0x2b5d64cbf530"/>
        <function-ref name="connect" scoped="" ref="0x2b5d64cc3660"/>
        <function-ref name="copy" scoped="" ref="0x2b5d64ccd598"/>
        <function-ref name="accept" scoped="" ref="0x2b5d64cc3020"/>
        <function-ref name="write" scoped="" ref="0x2b5d64cc0150"/>
        <function-ref name="close" scoped="" ref="0x2b5d64cc3dd0"/>
        <function-ref name="isConnected" scoped="" ref="0x2b5d64cbf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b5d64b55728" loc="48:/home/john/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b5d64b55728"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b5d64327160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b5d64b55a78"/>
        <function-ref name="runTask" scoped="" ref="0x2b5d64b55c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b5d64b54be8" loc="47:/home/john/local/tinyos-2.1.1/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b5d64b54be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b5d64b4c020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b5d64b4c1a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b5d64b4c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b5d64c10b08" loc="56:/home/john/local/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b5d64c10b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b5d64327160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b5d64c10e58"/>
        <function-ref name="runTask" scoped="" ref="0x2b5d64c0e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b5d64c0d020" loc="57:/home/john/local/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b5d64c0d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b5d64c0d370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b5d64c11c00" loc="55:/home/john/local/tinyos-2.1.1/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b5d64c11c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b5d64c10020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b5d64c101a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b5d64c10330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b5d64c317f0" loc="54:/home/john/local/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b5d64c317f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b5d64c31b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b5d64b5edd8" loc="50:/home/john/local/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b5d64b5edd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b5d64c27170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b5d64c32240" loc="51:/home/john/local/tinyos-2.1.1/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b5d64c32240"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b5d64c32590"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="NodeI" loc="1:/home/john/workspace/Project3/src/NodeI.nc">
      <parameters>
        <typedef name="val_t" ref="0x2b5d64cc9020" loc="1:/home/john/workspace/Project3/src/NodeI.nc">
          <interfacedef-ref qname="NodeI"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cc9020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="forward" ref="0x2b5d64cc9d18" loc="2:/home/john/workspace/Project3/src/NodeI.nc">
        <interfacedef-ref qname="NodeI"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cc9020"/></type-var>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b5d64327b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x2b5d64cc97d8" loc="2:/home/john/workspace/Project3/src/NodeI.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cc9020"/></type-var>
            </type-pointer>
          </variable>
          <variable ref="0x2b5d64cc9a98" loc="2:/home/john/workspace/Project3/src/NodeI.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b5d64327b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TCPManager" loc="1:/home/john/workspace/Project3/src/lib/Interfaces/TCPManager.nc">
      <parameters>
        <typedef name="val_t" ref="0x2b5d64cad238" loc="1:/home/john/workspace/Project3/src/lib/Interfaces/TCPManager.nc">
          <interfacedef-ref qname="TCPManager"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cad238"/></type-var>
        </typedef>
        <typedef name="val2_t" ref="0x2b5d64cad448" loc="1:/home/john/workspace/Project3/src/lib/Interfaces/TCPManager.nc">
          <interfacedef-ref qname="TCPManager"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val2_t" scoped="" ref="0x2b5d64cad448"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2b5d64cadc18" loc="2:/home/john/workspace/Project3/src/lib/Interfaces/TCPManager.nc">
        <interfacedef-ref qname="TCPManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="socket" ref="0x2b5d64caa360" loc="3:/home/john/workspace/Project3/src/lib/Interfaces/TCPManager.nc">
        <interfacedef-ref qname="TCPManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cad238"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="freeSocket" ref="0x2b5d64caabe8" loc="4:/home/john/workspace/Project3/src/lib/Interfaces/TCPManager.nc">
        <interfacedef-ref qname="TCPManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cad238"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x2b5d64caa978" loc="4:/home/john/workspace/Project3/src/lib/Interfaces/TCPManager.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cad238"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="handlePacket" ref="0x2b5d64ca8478" loc="5:/home/john/workspace/Project3/src/lib/Interfaces/TCPManager.nc">
        <interfacedef-ref qname="TCPManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x2b5d64ca8208" loc="5:/home/john/workspace/Project3/src/lib/Interfaces/TCPManager.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TCPSocket" loc="1:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
      <parameters>
        <typedef name="val_t" ref="0x2b5d64cabd88" loc="1:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
          <interfacedef-ref qname="TCPSocket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cabd88"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="listen" ref="0x2b5d64cb2618" loc="6:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
        <interfacedef-ref qname="TCPSocket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b5d64327160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cabd88"/></type-var>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b5d64327160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x2b5d64cb2060" loc="6:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cabd88"/></type-var>
            </type-pointer>
          </variable>
          <variable name="backlog" ref="0x2b5d64cb2398" loc="6:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b5d64327160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isClosing" ref="0x2b5d64cb7e80" loc="25:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
        <interfacedef-ref qname="TCPSocket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b5d64b469b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cabd88"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x2b5d64cb7c10" loc="25:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cabd88"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isConnectPending" ref="0x2b5d64cba770" loc="21:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
        <interfacedef-ref qname="TCPSocket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b5d64b469b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cabd88"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x2b5d64cba500" loc="21:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cabd88"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="release" ref="0x2b5d64cbe660" loc="14:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
        <interfacedef-ref qname="TCPSocket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b5d64327160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cabd88"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x2b5d64cbe3f0" loc="14:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cabd88"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2b5d64cbc9e0" loc="16:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
        <interfacedef-ref qname="TCPSocket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="short" size="I:2" alignment="I:1">
            <typename><typedef-ref name="int16_t" ref="0x2b5d64327658"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cabd88"/></type-var>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b5d64327160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b5d64327b98"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b5d64327b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x2b5d64cbed38" loc="16:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cabd88"/></type-var>
            </type-pointer>
          </variable>
          <variable name="readBuffer" ref="0x2b5d64cbc100" loc="16:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b5d64327160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="pos" ref="0x2b5d64cbc420" loc="16:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b5d64327b98"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0x2b5d64cbc740" loc="16:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b5d64327b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x2b5d64cb48a8" loc="2:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
        <interfacedef-ref qname="TCPSocket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cabd88"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x2b5d64cb4638" loc="2:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cabd88"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="bind" ref="0x2b5d64cb3948" loc="4:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
        <interfacedef-ref qname="TCPSocket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b5d64327160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cabd88"/></type-var>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b5d64327160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b5d64327b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x2b5d64cb3020" loc="4:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cabd88"/></type-var>
            </type-pointer>
          </variable>
          <variable name="localPort" ref="0x2b5d64cb3370" loc="4:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b5d64327160"/></typename>
            </type-int>
          </variable>
          <variable name="address" ref="0x2b5d64cb36b8" loc="4:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b5d64327b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isClosed" ref="0x2b5d64cb7420" loc="24:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
        <interfacedef-ref qname="TCPSocket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b5d64b469b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cabd88"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x2b5d64cb71b0" loc="24:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cabd88"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isListening" ref="0x2b5d64cb8a78" loc="23:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
        <interfacedef-ref qname="TCPSocket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b5d64b469b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cabd88"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x2b5d64cb8808" loc="23:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cabd88"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="connect" ref="0x2b5d64caf358" loc="10:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
        <interfacedef-ref qname="TCPSocket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b5d64327160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cabd88"/></type-var>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b5d64327b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b5d64327160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x2b5d64cb0a00" loc="10:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cabd88"/></type-var>
            </type-pointer>
          </variable>
          <variable name="destAddr" ref="0x2b5d64cb0d58" loc="10:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b5d64327b98"/></typename>
            </type-int>
          </variable>
          <variable name="destPort" ref="0x2b5d64caf0c8" loc="10:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b5d64327160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="copy" ref="0x2b5d64cc5b10" loc="27:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
        <interfacedef-ref qname="TCPSocket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cabd88"/></type-var>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cabd88"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x2b5d64cc5538" loc="27:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cabd88"/></type-var>
            </type-pointer>
          </variable>
          <variable name="output" ref="0x2b5d64cc5890" loc="27:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cabd88"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="accept" ref="0x2b5d64cb0348" loc="8:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
        <interfacedef-ref qname="TCPSocket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b5d64327160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cabd88"/></type-var>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cabd88"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x2b5d64cb2d00" loc="8:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cabd88"/></type-var>
            </type-pointer>
          </variable>
          <variable name="output" ref="0x2b5d64cb00c8" loc="8:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cabd88"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b5d64cbbd78" loc="18:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
        <interfacedef-ref qname="TCPSocket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="short" size="I:2" alignment="I:1">
            <typename><typedef-ref name="int16_t" ref="0x2b5d64327658"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cabd88"/></type-var>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b5d64327160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b5d64327b98"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b5d64327b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x2b5d64cbb100" loc="18:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cabd88"/></type-var>
            </type-pointer>
          </variable>
          <variable name="writeBuffer" ref="0x2b5d64cbb498" loc="18:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b5d64327160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="pos" ref="0x2b5d64cbb7b8" loc="18:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b5d64327b98"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0x2b5d64cbbad8" loc="18:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b5d64327b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="close" ref="0x2b5d64cafca8" loc="12:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
        <interfacedef-ref qname="TCPSocket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b5d64327160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cabd88"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x2b5d64cafa38" loc="12:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cabd88"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isConnected" ref="0x2b5d64cb8108" loc="22:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
        <interfacedef-ref qname="TCPSocket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b5d64b469b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cabd88"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x2b5d64cbae70" loc="22:/home/john/workspace/Project3/src/lib/Interfaces/TCPSocket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b5d64cabd88"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/john/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b5d64b56608" loc="67:/home/john/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/john/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b5d64b591a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b5d64b56df8" loc="75:/home/john/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/john/local/tinyos-2.1.1/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/john/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/john/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b5d64b48978" loc="57:/home/john/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/john/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b5d64b54878" loc="72:/home/john/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/john/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b5d64b540d8" loc="65:/home/john/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/john/local/tinyos-2.1.1/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b5d64b469b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/john/local/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/john/local/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b5d64c0ecb0" loc="76:/home/john/local/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/john/local/tinyos-2.1.1/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/john/local/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/john/local/tinyos-2.1.1/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b5d64c31360" loc="62:/home/john/local/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/john/local/tinyos-2.1.1/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b5d64bb3940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/john/local/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/john/local/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b5d64c27e68" loc="52:/home/john/local/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/john/local/tinyos-2.1.1/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
